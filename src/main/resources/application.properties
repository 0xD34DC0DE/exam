spring.datasource.url = jdbc:mysql://localhost:3306/tp2
spring.datasource.username = springuser
spring.datasource.password = strongPassword

server.port=8081

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.testWhileIdle = true
spring.datasource.tomcat.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
# If spring is throwing errors/warnings when starting, drop all tables then use create then update (create-drop won't work)
spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
